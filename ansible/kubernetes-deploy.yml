- hosts: localhost
  connection: local
  become: false # Ensure that the playbook doesn't run tasks as root unnecessarily
  tasks:
    - name: Decrypt Ansible Vault secrets
      include_vars:
        file: secrets.yml
        name: secrets

    - name: Check if Minikube is installed
      command: minikube version
      ignore_errors: yes
      register: minikube_installed

    - name: Install Minikube if not installed (Ubuntu example)
      apt:
        name: minikube
        state: present
      when: minikube_installed.rc != 0

    - name: Start Minikube without root privileges
      command: minikube start --driver=docker
      become: false

    - name: Get Minikube IP
      command: minikube ip
      register: minikube_ip

    # Deploy Flask App
    - name: Deploy Flask App to Kubernetes
      template:
        src: "{{ playbook_dir }}/../kubernetes/flask-deployment.yml.j2" # Using playbook_dir for path resolution
        dest: /tmp/flask-deployment.yml
      vars:
        minikube_ip: "{{ minikube_ip.stdout }}"
        MONGODB_URI: "{{ secrets.MONGODB_URI }}" # Inject decrypted secret
        DATABASE_NAME: "{{ secrets.DATABASE_NAME }}" # Inject decrypted secret

    - name: Apply Flask Deployment
      command: kubectl apply -f /tmp/flask-deployment.yml

    # Deploy React App
    - name: Deploy React App to Kubernetes
      template:
        src: "{{ playbook_dir }}/../kubernetes/react-deployment.yml.j2" # Using playbook_dir for path resolution
        dest: /tmp/react-deployment.yml
      vars:
        minikube_ip: "{{ minikube_ip.stdout }}"
        REACT_APP_API_URL: "http://{{ minikube_ip.stdout }}:30001" # API URL for React to connect to Flask backend

    - name: Apply React Deployment
      command: kubectl apply -f /tmp/react-deployment.yml
