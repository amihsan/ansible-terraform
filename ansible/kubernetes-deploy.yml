---
- hosts: app_server
  become: true
  tasks:
    - name: Gather EC2 instance metadata
      ec2_metadata_facts:

    - name: Ensure Python 3 is installed
      package:
        name: python3
        state: present

    - name: Install Docker
      yum:
        name: docker
        state: present

    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: yes

    - name: Stop and remove all Docker containers
      shell: |
        docker stop $(docker ps -q) && docker rm $(docker ps -a -q)
      ignore_errors: true

    - name: Remove all unused Docker images
      command: docker image prune -af

    - name: Remove all Docker images
      shell: |
        images=$(docker images -q)
        if [ -n "$images" ]; then
          docker rmi -f $images
        else
          echo "No images to remove"
        fi
      register: remove_images
      changed_when: "'No images to remove' not in remove_images.stdout"

    - name: Update system packages
      yum:
        name: "*"
        state: latest

    - name: Add Kubernetes YUM repository
      yum_repository:
        name: kubernetes
        description: Kubernetes Repo
        baseurl: https://packages.cloud.google.com/yum/doc/yum-key.gpg
        gpgcheck: yes
        enabled: yes
        gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg

    - name: Install kubelet, kubectl, and kubeadm
      yum:
        name:
          - kubelet
          - kubectl
          - kubeadm
        state: present

    - name: Enable and start kubelet
      service:
        name: kubelet
        state: started
        enabled: yes

    - name: Initialize Kubernetes control-plane
      command: kubeadm init --pod-network-cidr=10.244.0.0/16
      register: kubeadm_init
      failed_when: kubeadm_init.rc != 0

    - name: Set up kubeconfig for root
      command: >
        mkdir -p $HOME/.kube && cp /etc/kubernetes/admin.conf $HOME/.kube/config && 
        chown $(id -u):$(id -g) $HOME/.kube/config
      when: kubeadm_init.changed

    - name: Apply Flannel CNI plugin
      command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel.yaml
      when: kubeadm_init.changed

    # Templating Flask and React deployment and service files
    - name: Template Flask backend deployment file
      template:
        src: ./kubernetes/flask-deployment.yml.j2
        dest: /tmp/flask-deployment.yml

    - name: Template Flask backend service file
      template:
        src: ./kubernetes/flask-service.yml.j2
        dest: /tmp/flask-service.yml

    - name: Template React frontend deployment file
      template:
        src: ./kubernetes/react-deployment.yml.j2
        dest: /tmp/react-deployment.yml

    - name: Template React frontend service file
      template:
        src: ./kubernetes/react-service.yml.j2
        dest: /tmp/react-service.yml

    # Applying deployments and services
    - name: Apply Flask backend deployment
      shell: kubectl apply -f /tmp/flask-deployment.yml

    - name: Apply Flask backend service
      shell: kubectl apply -f /tmp/flask-service.yml

    - name: Apply React frontend deployment
      shell: kubectl apply -f /tmp/react-deployment.yml

    - name: Apply React frontend service
      shell: kubectl apply -f /tmp/react-service.yml
