---
- hosts: app_server
  become: true
  tasks:
    - name: Install Docker
      dnf:
        name: docker
        state: present

    - name: Install pip
      dnf:
        name: python3-pip
        state: present

    - name: Install Docker SDK for Python
      pip:
        name: docker
        executable: pip3
        extra_args: --ignore-installed requests

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Stop and remove all Docker containers
      docker_container:
        name: "{{ item }}"
        state: absent
        force_kill: yes
      loop: "{{ lookup('pipe', 'docker ps -a -q') | split('\n') }}"
      ignore_errors: yes

    - name: Remove all Docker images
      command: docker rmi $(docker images -q) --force
      ignore_errors: yes

    - name: Pull Flask backend image
      docker_image:
        name: amihsan/flask-terraform-backend:latest
        source: pull

    - name: Pull React frontend image
      docker_image:
        name: amihsan/react-terraform-frontend:latest
        source: pull

    - name: Run Flask container
      docker_container:
        name: flask-app
        image: amihsan/flask-terraform-backend:latest
        state: started
        restart_policy: always
        published_ports:
          - "5000:5000"

    - name: Run React container
      docker_container:
        name: react-app
        image: amihsan/react-terraform-frontend:latest
        state: started
        restart_policy: always
        published_ports:
          - "80:3000"
# ---
# - hosts: app_server
#   become: true
#   tasks:
#     - name: Install Docker
#       dnf:
#         name: docker
#         state: present

#     - name: Install pip
#       dnf:
#         name: python3-pip
#         state: present

#     - name: Install Docker SDK for Python
#       pip:
#         name: docker
#         executable: pip3
#         extra_args: --ignore-installed requests

#     - name: Start Docker service
#       service:
#         name: docker
#         state: started
#         enabled: yes

#     - name: Stop and remove all Docker containers
#       docker_container:
#         name: "{{ item }}"
#         state: absent
#         force_kill: yes
#       loop: "{{ lookup('pipe', 'docker ps -a -q') | split('\n') }}"
#       ignore_errors: true

#     - name: Remove all unused Docker images
#       command: docker image prune -af

#     - name: Pull Flask backend image
#       docker_image:
#         name: amihsan/flask-terraform-backend:latest
#         source: pull

#     - name: Pull React frontend image
#       docker_image:
#         name: amihsan/react-terraform-frontend:latest
#         source: pull

#     - name: Run Flask container
#       docker_container:
#         name: flask-app
#         image: amihsan/flask-terraform-backend:latest
#         state: started
#         restart_policy: always
#         published_ports:
#           - "5000:5000"

#     - name: Run React container
#       docker_container:
#         name: react-app
#         image: amihsan/react-terraform-frontend:latest
#         state: started
#         restart_policy: always
#         published_ports:
#           - "80:3000"
