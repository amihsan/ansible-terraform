---
- hosts: localhost
  connection: local
  become: false
  tasks:
    - name: Decrypt Ansible Vault secrets
      include_vars:
        file: secrets.yml
        name: secrets

    - name: Check if Minikube is installed
      command: minikube version
      ignore_errors: yes
      register: minikube_installed

    - name: Install Minikube if not installed (Ubuntu example)
      apt:
        name: minikube
        state: present
      when: minikube_installed.rc != 0

    - name: Check if Minikube profile exists
      command: minikube profile list
      register: minikube_profile_list
      ignore_errors: yes

    - name: Set variable for Minikube profile existence
      set_fact:
        minikube_profile_exists: "{{ minikube_profile_list.rc == 0 }}"

    - name: Check if Minikube is already running
      command: minikube status
      register: minikube_status
      when: minikube_profile_exists # Only check status if profile exists
      ignore_errors: yes

    - name: Set variable for Minikube running status
      set_fact:
        minikube_running: "{{ minikube_status.rc == 0 and 'Running' in minikube_status.stdout }}"
      when: minikube_profile_exists and minikube_status.rc == 0 # Only set if profile exists and status check succeeds

    - name: Determine if Minikube needs to be started
      set_fact:
        start_minikube: "{{ not minikube_profile_exists or (minikube_status.rc != 0 or not minikube_running) }}"

    - name: Start Minikube without root privileges
      command: minikube start --driver=docker
      when: start_minikube # Only start if required

    - name: Deploy Flask App to Kubernetes
      template:
        src: "{{ playbook_dir }}/../kubernetes/flask-deployment.yml.j2"
        dest: /tmp/flask-deployment.yml
      vars:
        MONGODB_URI: "{{ secrets.MONGODB_URI }}" # Inject decrypted secret
        DATABASE_NAME: "{{ secrets.DATABASE_NAME }}" # Inject decrypted secret

    - name: Apply Flask Deployment
      command: kubectl apply -f /tmp/flask-deployment.yml

    - name: Deploy React App to Kubernetes
      template:
        src: "{{ playbook_dir }}/../kubernetes/react-deployment.yml.j2"
        dest: /tmp/react-deployment.yml
      vars:
        VITE_API_URL: "{{ secrets.REACT_APP_API_URL }}"

    - name: Apply React Deployment
      command: kubectl apply -f /tmp/react-deployment.yml

    - name: Wait for Flask pods to be ready
      command: kubectl wait --for=condition=available --timeout=120s deployment/flask-app # metadata name of flask-deployment.yml.j2

    - name: Wait for React pods to be ready
      command: kubectl wait --for=condition=available --timeout=120s deployment/react-app # metadata name of react-deployment.yml.j2

    - name: Open React App in Browser
      command: minikube service react-app
